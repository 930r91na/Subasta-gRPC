syntax = "proto3";

package auction;

option go_package = "github.com/930r91na/Subasta-grpc/pkg/auction;auction";

// ========== Messages (Data Structures) ==========

// User information
message User {
  string name = 1;
}

// Product information
message ProductInfo {
  string seller = 1;
  string product = 2;
  float initial_price = 3;
  float current_price = 4;
  int64 auction_end_time = 5; // Unix timestamp when auction ends
  bool is_active = 6; // Whether auction is still active
}

// Bid information
message BidInfo {
  string buyer = 1;
  string product = 2;
  float amount = 3;
}

// Purchased item information
message PurchasedItem {
  string product = 1;
  string seller = 2;
  float purchase_price = 3;
  int64 purchase_time = 4; // Unix timestamp when purchased
}

// ========== Request/Response Messages ==========

// Register user
message RegisterUserRequest {
  string name = 1;
}

message RegisterUserResponse {
  bool success = 1;
  string message = 2;
}

// Add product for sale
message AddProductRequest {
  string seller = 1;
  string product = 2;
  float initial_price = 3;
  int32 auction_duration_seconds = 4; // How long the auction should run
}

message AddProductResponse {
  bool success = 1;
  string message = 2;
}

// Place bid
message PlaceBidRequest {
  string buyer = 1;
  string product = 2;
  float amount = 3;
}

message PlaceBidResponse {
  bool success = 1;
  string message = 2;
  float current_price = 3;
}

// Get catalog
message GetCatalogRequest {
  // Empty - no parameters needed
}

message GetCatalogResponse {
  repeated ProductInfo products = 1;
}

// Get product details
message GetProductRequest {
  string product = 1;
}

message GetProductResponse {
  bool found = 1;
  ProductInfo product = 2;
}

// Get purchased items for a user
message GetPurchasedItemsRequest {
  string buyer = 1;
}

message GetPurchasedItemsResponse {
  repeated PurchasedItem items = 1;
}

// ========== Service Definition ==========

service AuctionService {
  // Register a new user
  rpc RegisterUser(RegisterUserRequest) returns (RegisterUserResponse);

  // Add a product for sale
  rpc AddProduct(AddProductRequest) returns (AddProductResponse);

  // Place a bid on a product
  rpc PlaceBid(PlaceBidRequest) returns (PlaceBidResponse);

  // Get the catalog of all products
  rpc GetCatalog(GetCatalogRequest) returns (GetCatalogResponse);

  // Get specific product information
  rpc GetProduct(GetProductRequest) returns (GetProductResponse);

  // Get items purchased by a user
  rpc GetPurchasedItems(GetPurchasedItemsRequest) returns (GetPurchasedItemsResponse);
}
